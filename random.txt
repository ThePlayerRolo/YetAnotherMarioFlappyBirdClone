//Controller Lesson  Code
void Lesson2_Functions(void) {
    bool joypad_is_connected(joypad_port_t port);
    //joypad_style_t joypad_get_style(joypad_port_t port);
    joybus_identifier_t joypad_get_identifier(joypad_port_t port);
    joypad_accessory_type_t joypad_get_accessory_type(joypad_port_t port);
    joypad_inputs_t joypad_get_inputs(joypad_port_t port);
    joypad_buttons_t joypad_get_buttons(joypad_port_t port);
    joypad_8way_t joypad_get_direction(joypad_port_t port, joypad_2d_t axes);
    int joypad_get_axis_pressed(joypad_port_t port, joypad_axis_t axis);
    int joypad_get_axis_released(joypad_port_t port, joypad_axis_t axis);
    int joypad_get_axis_held(joypad_port_t port, joypad_axis_t axis);
    // Button pressed on this frame
    joypad_buttons_t joypad_get_buttons_pressed(joypad_port_t port);
    int joypad_get_axis_pressed(joypad_port_t port, joypad_axis_t axis);

    // Button held since the previous frame
    joypad_buttons_t joypad_get_buttons_held(joypad_port_t port);
    int joypad_get_axis_released(joypad_port_t port, joypad_axis_t axis);

    // Button released on this frame
    joypad_buttons_t joypad_get_buttons_released(joypad_port_t port);
    int joypad_get_axis_held(joypad_port_t port, joypad_axis_t axis);

    // Returns the counter-clockwise direction in a 2-way axis
    joypad_8way_t joypad_get_direction(joypad_port_t port, joypad_2d_t axes);
}
    if (firstbox->vec3.y <= secondBox->vec3.y){
        if (secondBox->vec2.x >= firstbox->vec2.x - 10  &&  secondBox->vec1.x <= firstbox->vec1.x + 10) {
            return 1;

        }
    }